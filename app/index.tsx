import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';
import Icon from 'react-native-vector-icons/FontAwesome';
import { useRouter } from "expo-router";
const Index = () => {
  const router = useRouter();
  return (
    <View style={styles.container}>
      {/* Header */}
      <Header router={router} />


      <ScrollView showsVerticalScrollIndicator={false}>
        {/* N√¢ng c·∫•p Pro */}
        <UpgradeBanner />

        {/* L∆∞·ªõi t√≠nh nƒÉng */}
        <FeatureGrid />

        {/* Ti·∫øn ƒë·ªô √¥n t·∫≠p */}
        <ProgressSection />

        {/* √în t·∫≠p theo ch·ªß ƒë·ªÅ */}
        <StudyTopics />
      </ScrollView>
    </View>
  );
};

// Header Component
const Header = ({ router }: { router: ReturnType<typeof useRouter> }) => (
  <View style={styles.header}>
    <TouchableOpacity onPress={() => router.push('/settings')}>
      <Icon name="cog" size={22} color="#007AFF" />
    </TouchableOpacity>
    <Text style={styles.headerTitle}>OTOMOTO - C1</Text>
    <Icon name="trophy" size={22} color="gold" />
  </View>
);

// Banner N√¢ng C·∫•p Pro
const UpgradeBanner = () => (
  <View style={styles.upgradeBanner}>
    <Text style={styles.upgradeText}>Phi√™n b·∫£n Pro - 30% OFF</Text>
    <TouchableOpacity style={styles.upgradeButton}>
      <Text style={styles.upgradeButtonText}>N√¢ng c·∫•p</Text>
    </TouchableOpacity>
  </View>
);

// L∆∞·ªõi t√≠nh nƒÉng
const FeatureGrid = () => {
  const router = useRouter(); // Hook d√πng ƒë·ªÉ chuy·ªÉn h∆∞·ªõng

  const handleFeaturePress = (text: string) => {
    if (text === "THI TH·ª¨") {
      router.push("/testscreen"); // ƒê·∫£m b·∫£o r·∫±ng b·∫°n c√≥ ƒë·ªãnh tuy·∫øn t·ªõi TestScreen
    }
    // B·∫°n c√≥ th·ªÉ th√™m ƒëi·ªÅu ki·ªán cho c√°c button kh√°c n·∫øu c·∫ßn thi·∫øt.
  };

  return (
    <View style={styles.featureGrid}>
      {[
        { icon: "book", text: "THI TH·ª¨", color: "#007AFF" },
        { icon: "bookmark", text: "L∆ØU", color: "#00C853" },
        { icon: "times-circle", text: "C√ÇU SAI", color: "#FF3D00" },
        { icon: "file-text", text: "C√ÇU HAY SAI", color: "#FFD600" },
        { icon: "road", text: "SA H√åNH", color: "#007AFF" }, // Th√™m SA H√åNH
        { icon: "lightbulb-o", text: "M·∫∏O", color: "#00C853" }, // Th√™m M·∫∏O
        { icon: "traffic-light", text: "BI·ªÇN B√ÅO", color: "#FF3D00" }, // Th√™m BI·ªÇN B√ÅO
        { icon: "comments", text: "H·ªéI ƒê√ÅP", color: "#007AFF" }, // Th√™m H·ªéI ƒê√ÅP
      ].map((item, index) => (
        <TouchableOpacity
          key={index}
          style={[styles.featureButton, { backgroundColor: item.color }]}
          onPress={() => handleFeaturePress(item.text)} // G·ªçi h√†m khi ·∫•n v√†o button
        >
          <Icon name={item.icon} size={24} color="#fff" />
          <Text style={styles.featureText}>{item.text}</Text>
        </TouchableOpacity>
      ))}
    </View>
  );
};

// Ti·∫øn ƒë·ªô √¥n t·∫≠p
const ProgressSection = () => (
  <View style={styles.progressContainer}>
    <Text style={styles.progressTitle}>Ti·∫øn ƒë·ªô √¥n t·∫≠p</Text>
    <View style={styles.progressBar}>
      <View style={styles.progressFill} />
    </View>
  </View>
);

// √în t·∫≠p theo ch·ªß ƒë·ªÅ
const StudyTopics = () => {
  const router = useRouter();

  type ScreenPath = "/questionscreen" | "/information" | "/select-gplx";

  const topics: { icon: string; title: string; count: number; screen?: ScreenPath }[] = [
    { icon: 'üî•', title: 'C√¢u h·ªèi ƒëi·ªÉm li·ªát', count: 60, screen: "/questionscreen" },
    { icon: 'üö¶', title: 'Kh√°i ni·ªám v√† quy t·∫Øc', count: 166 },
    { icon: 'üöö', title: 'Nghi·ªáp v·ª• v·∫≠n t·∫£i', count: 26 },
    { icon: 'üë®‚Äçüíº', title: 'VƒÉn ho√° v√† ƒë·∫°o ƒë·ª©c', count: 21 },
    { icon: 'üöó', title: 'K·ªπ thu·∫≠t l√°i xe', count: 56 },
    { icon: 'üîß', title: 'C·∫•u t·∫°o v√† s·ª≠a ch·ªØa', count: 32 },
    { icon: '‚ö†Ô∏è', title: 'Bi·ªÉn b√°o ƒë∆∞·ªùng b·ªô', count: 45 },
    { icon: 'üõë', title: 'Sa h√¨nh', count: 38 },
  ];
  

  return (
    <View style={styles.studyTopicsContainer}>
      <Text style={styles.studyTopicsTitle}>√în t·∫≠p theo ch·ªß ƒë·ªÅ</Text>
      {topics.map((topic, index) => (
        <TouchableOpacity 
          key={index} 
          style={styles.topicCard}
          onPress={() => topic.screen && router.push(topic.screen)}
        >
          <Text style={styles.topicIcon}>{topic.icon}</Text>
          <View style={styles.topicInfo}>
            <Text style={styles.topicTitle}>{topic.title}</Text>
            <Text style={styles.topicCount}>{topic.count} c√¢u h·ªèi</Text>
          </View>
        </TouchableOpacity>
      ))}
    </View>
  );
};



// Styles
const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#F8F9FA' },
  header: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, backgroundColor: '#fff' },
  headerTitle: { fontSize: 18, fontWeight: 'bold' },
  upgradeBanner: { flexDirection: 'row', justifyContent: 'space-between', padding: 15, backgroundColor: '#007AFF', margin: 10, borderRadius: 10 },
  upgradeText: { fontWeight: 'bold', color: '#fff' },
  upgradeButton: { backgroundColor: '#fff', padding: 5, borderRadius: 5 },
  upgradeButtonText: { color: '#007AFF', fontWeight: 'bold' },
  featureGrid: { flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-around', margin: 10 },
  featureButton: { width: '45%', padding: 20, borderRadius: 10, alignItems: 'center', marginBottom: 10 },
  featureText: { color: '#fff', marginTop: 5, fontWeight: 'bold' },
  progressContainer: { padding: 15, backgroundColor: '#fff', margin: 10, borderRadius: 10 },
  progressTitle: { fontSize: 16, fontWeight: 'bold', marginBottom: 5 },
  progressBar: { height: 10, backgroundColor: '#ddd', borderRadius: 5, overflow: 'hidden' },
  progressFill: { width: '50%', height: '100%', backgroundColor: '#007AFF' },
  studyTopicsContainer: { padding: 15, backgroundColor: '#fff', margin: 10, borderRadius: 10 },
  studyTopicsTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 10 },
  topicCard: { flexDirection: 'row', alignItems: 'center', padding: 15, backgroundColor: '#F4F4F4', borderRadius: 10, marginBottom: 10 },
  topicIcon: { fontSize: 24, marginRight: 10 },
  topicInfo: { flex: 1 },
  topicTitle: { fontSize: 16, fontWeight: 'bold' },
  topicCount: { fontSize: 14, color: '#666' },
});

export default Index;
